name: Build en Release Tauri app

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # alle tags in de history nodig

      - name: Extract version from tag
        id: extract_version
        run: |
          # Strip 'refs/tags/v' prefix om '1.0.0' uit 'refs/tags/v1.0.0' te halen
          version=${GITHUB_REF#refs/tags/v}                            # bash parameter expansion :contentReference[oaicite:1]{index=1}
          echo "version=$version" >> $GITHUB_OUTPUT                   # stel output in voor latere stappen

      - name: Bump Rust version in Cargo.toml
        run: |
          cargo install cargo-edit
          cargo set-version "${{ steps.extract_version.outputs.version }}" \
            --manifest-path src-tauri/Cargo.toml

      - name: Update version in tauri.conf.json
        run: |
          jq --arg v "${{ steps.extract_version.outputs.version }}" \
            '.package.version = $v' src-tauri/tauri.conf.json \
            > tmp.json && mv tmp.json src-tauri/tauri.conf.json

      - name: Bump npm version & lockfile
        run: |
          npm install --no-save
          npm version "${{ steps.extract_version.outputs.version }}" --no-git-tag-version

      - name: Commit version updates
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: bump version to ${{ steps.extract_version.outputs.version }}"
          branch: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Rust toolchain en targets
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Linux dependencies installeren
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libjavascriptcoregtk-4.1-dev \
            pkg-config \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Frontend dependencies installeren
        run: yarn install

      - name: Build en release via tauri-action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App ${{ github.ref_name }}"
          releaseBody: "Download de installatie via de assets."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          projectPath: .
          includeDebug: false
          includeRelease: true
          includeUpdaterJson: true
          updaterJsonKeepUniversal: false
